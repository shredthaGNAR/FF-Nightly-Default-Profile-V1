{
    "sourceFile": "uc-tabs.css",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1749733182093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749733263168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,15 @@\n  * If a copy of the CC BY-NC-SA 4.0 was not distributed with this\n  * file, You can obtain one at http://creativecommons.org/licenses/by-nc-sa/4.0/\n  * or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */\n \n-/* controls the appearance of individual tabs and elements inside a tab. */\n+/* controls the appearance of individual tabs and elements inside a tab. *\n \n #TabsToolbar .tabbrowser-tab {\n   background-color: var(--lwt-accent-color) !important;\n }\n \n-/* different tab background colors in various states */\n+/* different tab background colors in various states *\n .tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background {\n   background: var(--uc-tab-hover) !important;\n }\n \n"
                },
                {
                    "date": 1752552878122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,70 +3,81 @@\n  * If a copy of the CC BY-NC-SA 4.0 was not distributed with this\n  * file, You can obtain one at http://creativecommons.org/licenses/by-nc-sa/4.0/\n  * or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */\n \n-/* controls the appearance of individual tabs and elements inside a tab. *\n+/* controls the appearance of individual tabs and elements inside a tab. */\n \n #TabsToolbar .tabbrowser-tab {\n   background-color: var(--lwt-accent-color) !important;\n }\n \n+.tab-content {\n+  overflow: hidden !important;\n+}\n+\n /* different tab background colors in various states *\n-.tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background {\n+.tabbrowser-tab:not([selected]):is(:hover, [open]) .tab-background {\n   background: var(--uc-tab-hover) !important;\n }\n \n .tabbrowser-tab:is([visuallyselected], [selected]) .tab-background {\n   background: var(--uc-tab-selected) !important;\n }\n \n-.tabbrowser-tab:focus:not([aria-activedescendant])>.tab-stack>.tab-background,\n-.tabbrowser-tab.keyboard-focused-tab[selected]>.tab-stack>.tab-background {\n-  background: var(--uc-tab-focused-hover) !important;\n-}\n-\n-.tabbrowser-tab:not([selected], [multiselected], :hover, .keyboard-focused-tab, [open]) .tab-background {\n+.tabbrowser-tab:not([selected], [multiselected], :hover, [open]) .tab-background {\n   background: var(--uc-tab-background) !important;\n }\n \n-.tabbrowser-tab[multiselected]:not([selected], :hover, .keyboard-focused-tab, [open]) .tab-background {\n+.tabbrowser-tab[multiselected]:not([selected], :hover, [open]) .tab-background {\n   background: var(--uc-tab-multi) !important;\n }\n \n-.tabbrowser-tab[multiselected]:not([selected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background {\n+.tabbrowser-tab[multiselected]:not([selected]):is(:hover, [open]) .tab-background {\n   background: var(--uc-tab-multi-hover) !important;\n }\n \n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus {\n+  &:not([selected]) > .tab-stack > .tab-background {\n+    background: var(--uc-tab-hover) !important;\n+  }\n+\n+  &[selected] > .tab-stack > .tab-background {\n+    background: var(--uc-tab-focused-hover) !important;\n+  }\n+\n+  &[multiselected]:not([selected]) > .tab-stack > .tab-background {\n+    background: var(--uc-tab-multi-hover) !important;\n+  }\n+}\n+\n /* block our animations while tabs are being dragged & dropped */\n #tabbrowser-tabs[movingtab] .tabbrowser-tab * {\n   transform: none !important;\n }\n \n+/*\n .tab-background {\n   border: none !important;\n   outline: none !important;\n   opacity: 1 !important;\n-}\n+}*/\n \n /* different tab shadows in various states. to produce the illusion of modulated depth */\n-/* .tabbrowser-tab .tab-background {\n+.tabbrowser-tab .tab-background {\n   box-shadow: 0px 0px 15px 0px hsla(0, 0%, 0%, 0.2), 0px 0px 5px 0px hsla(0, 0%, 0%, 0.1);\n-} */\n+}\n \n-.tabbrowser-tab:not([selected], [multiselected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background,\n-.tabbrowser-tab[multiselected] .tab-background {\n-  box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.25) !important;\n+.tabbrowser-tab:not([selected], [multiselected]):is(:hover, [open]) .tab-background,\n+.tabbrowser-tab[multiselected] .tab-background,\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus:not([selected], [multiselected]) .tab-background {\n+  box-shadow: 0 0 20px 1px rgba(0, 0, 0, 0.1), 0 0 15px 0 hsla(0, 0%, 0%, 0.25) !important;\n }\n \n .tabbrowser-tab[selected] .tab-background,\n .tabbrowser-tab[multiselected][selected] .tab-background {\n-  box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;\n+  box-shadow: 0 0 20px 1px rgba(0, 0, 0, 0.1), 0 0 15px 0 hsla(0, 0%, 0%, 0.35) !important;\n }\n \n-.tabbrowser-tab:focus:not([aria-activedescendant]) .tab-background {\n-  box-shadow: 0px 0px 25px 3px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;\n-}\n-\n .tabbrowser-tab .tab-context-line {\n   display: flex !important;\n   order: 2 !important;\n   height: 1px !important;\n@@ -79,12 +90,12 @@\n .tabbrowser-tab[usercontextid] .tab-context-line {\n   background-color: var(--identity-tab-color) !important;\n }\n \n-/* purple line on multiselected tabs */\n+/* purple line on multiselected tabs *\n .tabbrowser-tab[multiselected] .tab-context-line {\n   background-color: var(--multiselected-color) !important;\n-}\n+}*/\n \n .tabbrowser-tab:not([usercontextid], [multiselected]) .tab-context-line {\n   display: none !important;\n }\n@@ -122,40 +133,8 @@\n .tab-content[pinned] {\n   padding: 0 var(--tab-inline-padding) !important;\n }\n \n-/* a bunch of rules I might revisit in the future. minified since this is\n-really just a backup. these make it so that the tab highlight line on\n-container tabs only shows when the tab strip (or the tab itself) is being\n-hovered. I used these rules for a long time but I realized although it might\n-be aesthetically less jarring, it makes it harder to find your container\n-tabs, which could represent a security risk if you accidentally use the\n-wrong container because you couldn't find the tab you were looking for. */\n-/* .tabbrowser-tab[usercontextid] .tab-context-line{opacity:0!important;transition:none!important;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid] .tab-context-line,.tabbrowser-tab[usercontextid]:is(:hover,[selected],[multiselected],.keyboard-focused-tab,[open]) .tab-context-line{transform:none;opacity:1!important;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::before,.tabbrowser-tab[usercontextid]:is(:hover,.keyboard-focused-tab,[selected],[visuallyselected],[open]):not([multiselected]) .tab-stack::before{left:-4.6px;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::after,.tabbrowser-tab[usercontextid]:is(:hover,.keyboard-focused-tab,[selected],[visuallyselected],[open]):not([multiselected]) .tab-stack::after{right:-4.6px;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::after,#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::before,.tabbrowser-tab[usercontextid]:is([selected],:hover,.keyboard-focused-tab,[open]) .tab-stack::after,.tabbrowser-tab[usercontextid]:is([selected],:hover,.keyboard-focused-tab,[open]) .tab-stack::before{background-image:linear-gradient(0deg,var(--identity-tab-color) 0,var(--identity-tab-color) 1px,var(--tab-bg-current) 1px);} */\n-\n-/* the corners inherit these variables from the tab,\n-just like they do with --identity-tab-color *\n-.tabbrowser-tab:not([selected], [pinned]) {\n-  --tab-bg-current: var(--lwt-accent-color);\n-}\n-\n-.tabbrowser-tab[selected],\n-.tabbrowser-tab[pinned]:not([selected]) {\n-  --tab-bg-current: var(--toolbar-bgcolor);\n-}\n-\n-.tabbrowser-tab:not([selected], [pinned], [multiselected]):is(:hover, .keyboard-focused-tab, [open]) {\n-  --tab-bg-current: hsl(233, 55%, 8%);\n-}\n-\n-.tabbrowser-tab[multiselected]:not([selected], [pinned]) {\n-  --tab-bg-current: hsl(233, 53%, 8%);\n-}\n-\n-.tabbrowser-tab[multiselected]:not([selected], [pinned]):is(:hover, .keyboard-focused-tab, [open]) {\n-  --tab-bg-current: hsl(233, 51%, 10%);\n-}\n-\n /* style the loading burst that triggers when tab loading finishes */\n .tab-loading-burst {\n   pointer-events: none;\n }\n@@ -212,15 +191,15 @@\n   stroke-opacity: 0.6 !important;\n }\n \n .tab-icon-sound {\n-  display: -moz-inline-box !important;\n+  --tab-icon-end-margin: 0 !important;\n+  display: block !important;\n   list-style-image: none !important;\n   background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;\n   background-size: 12px !important;\n   background-position: center !important;\n   background-repeat: no-repeat !important;\n-  list-style-image: none !important;\n   -moz-context-properties: fill, fill-opacity !important;\n   order: 2 !important;\n   fill-opacity: 0.6 !important;\n }\n@@ -255,19 +234,22 @@\n .tabbrowser-tab[pending] .tab-content .tab-icon-sound {\n   color: var(--uc-menu-semi-disabled-color) !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) :is(.tab-icon-sound, .tab-close-button) {\n+.tabbrowser-tab:is(:hover, [open]) :is(.tab-icon-sound, .tab-close-button),\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus :is(.tab-icon-sound, .tab-close-button) {\n   opacity: 1 !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) :is(.tab-icon-sound, .tab-close-button):hover:active {\n+.tabbrowser-tab:is(:hover, [open]) :is(.tab-icon-sound, .tab-close-button):hover:active,\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus :is(.tab-icon-sound, .tab-close-button):hover:active {\n   background-color: var(--arrowpanel-dimmed-further) !important;\n }\n \n /* for the picture in picture button to mute/unmute tabs with proton, you need\n to follow the restore tab sound button instructions on my repo's readme */\n-.tabbrowser-tab:not(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture] {\n+#tabbrowser-tabs:not([tablist-has-focus]) .tabbrowser-tab:not(:hover, [open]) .tab-icon-sound[pictureinpicture],\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab:not(.tablist-keyboard-focus) .tab-icon-sound[pictureinpicture] {\n   background-image: url(chrome://userchrome/content/tab-picture-in-picture.svg) !important;\n   background-size: 12px !important;\n   background-position: center !important;\n   background-repeat: no-repeat !important;\n@@ -277,9 +259,10 @@\n .tab-icon-sound:is([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n   opacity: 1 !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying],\n+.tabbrowser-tab:is(:hover, [open]) .tab-icon-sound[pictureinpicture][soundplaying],\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus .tab-icon-sound[pictureinpicture][soundplaying],\n .tabbrowser-tab .tab-icon-sound[pictureinpicture][muted],\n .tabbrowser-tab .tab-icon-sound[pictureinpicture]:hover {\n   background-size: 12px !important;\n   background-position: center !important;\n@@ -287,15 +270,20 @@\n   list-style-image: none !important;\n   border-radius: var(--tab-button-border-radius, 2px) !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying] {\n+.tabbrowser-tab:is(:hover, [open]) .tab-icon-sound[pictureinpicture][soundplaying],\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus .tab-icon-sound[pictureinpicture][soundplaying] {\n   background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][muted],\n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying][muted] {\n-  background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;\n+.tabbrowser-tab:is(:hover, [open]) .tab-icon-sound,\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus .tab-icon-sound {\n+\n+  &[pictureinpicture][muted],\n+  &[pictureinpicture][soundplaying][muted] {\n+    background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;\n+  }\n }\n \n .tab-icon-sound {\n   transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out, 0.12s margin ease-in-out !important;\n@@ -316,10 +304,10 @@\n muted, but only shows on the selected tab if 1) the tab is muted, or 2) the tabs\n area is hovered. so in other words it won't show if audio is playing until you\n hover the general area of the tabs, but will show if audio is muted. */\n \n-/* #tabbrowser-tabs:not(:hover, :focus-within, :focus) .tabbrowser-tab[visuallyselected] .tab-content > .tab-icon-sound:not([pictureinpicture], [muted]), */\n-#tabbrowser-tabs:not(:hover, :focus-within, :focus) .tabbrowser-tab:not([open]) .tab-content>.tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n+#tabbrowser-tabs:not(:hover, [tablist-has-focus]) .tabbrowser-tab[selected] .tab-content>.tab-icon-sound:not([pictureinpicture], [muted]),\n+#tabbrowser-tabs:not(:hover, [tablist-has-focus]) .tabbrowser-tab:not([open]) .tab-content>.tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n   opacity: 0 !important;\n   pointer-events: none !important;\n   transform: translateX(16px) scale(0.5) !important;\n   margin-right: -16px !important;\n@@ -333,9 +321,9 @@\n #tabbrowser-tabs[movingtab] .tabbrowser-tab[selected]:not([pinned]) .tab-close-button {\n   order: 0 !important;\n   display: flex !important;\n   position: relative !important;\n-  margin-right: -16px !important;\n+  margin-right: 0px !important;\n   visibility: visible !important;\n   opacity: 1 !important;\n }\n \n@@ -368,10 +356,11 @@\n   background-position: center;\n }\n \n /* tab buttons are animated with opacity and transformation */\n-.tabbrowser-tab:not(:hover, .keyboard-focused-tab, [tabdrop-samewindow], [open]) .tab-close-button {\n-  transform: translateX(-15px) scale(0.5) !important;\n+#tabbrowser-tabs:not([tablist-has-focus]) .tabbrowser-tab:not(:hover, [tabdrop-samewindow], [open]) .tab-close-button,\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab:not(.tablist-keyboard-focus) .tab-close-button {\n+  transform: translateX(0px) scale(0) !important;\n }\n \n #tabbrowser-tabs:not([movingtab]) .tabbrowser-tab:not([tabdrop-samewindow]) :is(.tab-close-button, .tab-icon-image, .tab-sharing-icon-overlay, .tab-throbber) {\n   transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out !important;\n@@ -379,20 +368,21 @@\n \n .tab-icon-pending[pendingicon] {\n   pointer-events: none !important;\n   display: block !important;\n-  margin-right: -16px !important;\n+  margin-right: 0px !important;\n }\n \n .tab-icon-image {\n   display: block !important;\n   position: relative !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [busy], [open]) :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n+.tabbrowser-tab:is(:hover, [busy], [open]) :is(.tab-icon-image, .tab-sharing-icon-overlay),\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n   opacity: 0 !important;\n   pointer-events: none !important;\n-  transform: translateX(25px) scale(0.5) !important;\n+  transform: translateX(0px) scale(0) !important;\n }\n \n .tabbrowser-tab .tab-label:not([fadein]),\n .tabbrowser-tab .tab-throbber:not([fadein]) {\n@@ -401,15 +391,16 @@\n \n .tabbrowser-tab .tab-throbber:not([busy]) {\n   opacity: 0 !important;\n   pointer-events: none !important;\n-  transform: translateX(-15px) scale(0.5) !important;\n+  transform: translateX(0px) scale(0.5) !important;\n }\n \n-.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [tabdrop-samewindow], [open]) .tab-throbber {\n+.tabbrowser-tab:is(:hover, [tabdrop-samewindow], [open]) .tab-throbber,\n+#tabbrowser-tabs[tablist-has-focus] .tabbrowser-tab.tablist-keyboard-focus .tab-throbber {\n   opacity: 0 !important;\n   pointer-events: none !important;\n-  transform: translateX(25px) scale(0.5) !important;\n+  transform: translateX(0px) scale(0.5) !important;\n }\n \n .tab-throbber[busy] {\n   fill: var(--busy-throbber-fill) !important;\n@@ -482,12 +473,14 @@\n   :root[sessionrestored] .tab-throbber[throbber-loaded]::before {\n     content: \"\" !important;\n     display: flex !important;\n     -moz-context-properties: fill, fill-opacity !important;\n+    /* stylelint-disable declaration-block-no-duplicate-properties */\n     width: 16px !important;\n     height: 16px !important;\n     animation: none !important;\n     background-position: center !important;\n+    /* stylelint-enable declaration-block-no-duplicate-properties */\n     background-repeat: no-repeat !important;\n     fill: inherit !important;\n \n     /* ANIMATION METHOD #1: this version of the animation is implemented by an\n@@ -568,25 +561,27 @@\n /* hide the close button for pinned tabs. if the last visible tab is pinned, it\n doesn't hide the close button since the tab doesn't get shrunk in that case.\n this requires you to make a pref in about:config and set it to true:\n \"userChrome.tabs.pinned-tabs.close-buttons.disabled\" */\n-@media (-moz-bool-pref: \"userChrome.tabs.pinned-tabs.close-buttons.disabled\") {\n-  .tabbrowser-tab[pinned] .tab-close-button {\n-    display: none !important;\n-  }\n+/* stylelint-disable-next-line media-query-no-invalid */\n \n-  .tabbrowser-tab[pinned] .tab-throbber[busy],\n-  .tabbrowser-tab[pinned]:not([busy]) :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n-    opacity: 1 !important;\n-    transform: none !important;\n-  }\n+.tabbrowser-tab[pinned] .tab-close-button {\n+  display: none !important;\n }\n \n+.tabbrowser-tab[pinned] .tab-throbber[busy],\n+.tabbrowser-tab[pinned]:not([busy]) :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n+  opacity: 1 !important;\n+  transform: none !important;\n+}\n+\n+\n /* for some reason the gradient on overflowing labels is variable in proton. it\n gets bigger when you hover the tab, apparently because the close button gains a\n background in that condition. this is ugly in general imo but it's useless with\n this theme in particular since we put the close button on the right, meaning it\n doesn't overlap with the right side of the label at all, which is where the\n overflowing mask is applied. so we make the mask size constant. */\n .tabbrowser-tab {\n-  --tab-label-mask-size: 2em !important;\n+  --tab-label-mask-size: 1em !important;\n+  --tab-min-width: inherit !important;\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752553217112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,9 +368,9 @@\n \n .tab-icon-pending[pendingicon] {\n   pointer-events: none !important;\n   display: block !important;\n-  margin-right: 0px !important;\n+  margin-right: -16px !important;\n }\n \n .tab-icon-image {\n   display: block !important;\n"
                },
                {
                    "date": 1752553290620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n .tab-icon-overlay {\n   display: none !important;\n }\n \n-/* tab buttons are generally styled the same */\n+/* tab buttons are generally styled the same *\n .tab-close-button,\n .tab-icon-sound {\n   width: 16px !important;\n   height: 16px !important;\n"
                },
                {
                    "date": 1752553314957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n .tab-icon-overlay {\n   display: none !important;\n }\n \n-/* tab buttons are generally styled the same *\n+/* tab buttons are generally styled the same */\n .tab-close-button,\n .tab-icon-sound {\n   width: 16px !important;\n   height: 16px !important;\n"
                },
                {
                    "date": 1752553355628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n   order: 0;\n   display: block !important;\n   -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;\n   position: relative;\n-  margin-inline: 0 -16px !important;\n+  margin-inline: 0 0px !important;\n   list-style-image: url(chrome://userchrome/content/textbox-clear.svg) !important;\n   fill-opacity: 0 !important;\n   stroke-opacity: 0.6 !important;\n }\n"
                },
                {
                    "date": 1752553382103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n   order: 0;\n   display: block !important;\n   -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;\n   position: relative;\n-  margin-inline: 0 0px !important;\n+  margin-inline: 0 -16px !important;\n   list-style-image: url(chrome://userchrome/content/textbox-clear.svg) !important;\n   fill-opacity: 0 !important;\n   stroke-opacity: 0.6 !important;\n }\n"
                },
                {
                    "date": 1752553419508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -581,7 +581,7 @@\n this theme in particular since we put the close button on the right, meaning it\n doesn't overlap with the right side of the label at all, which is where the\n overflowing mask is applied. so we make the mask size constant. */\n .tabbrowser-tab {\n-  --tab-label-mask-size: 1em !important;\n+  --tab-label-mask-size: 2em !important;\n   --tab-min-width: inherit !important;\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1749733182093,
            "name": "Commit-0",
            "content": "/* This Source Code Form is subject to the terms of the Creative Commons\n * Attribution-NonCommercial-ShareAlike International License, v. 4.0.\n * If a copy of the CC BY-NC-SA 4.0 was not distributed with this\n * file, You can obtain one at http://creativecommons.org/licenses/by-nc-sa/4.0/\n * or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */\n\n/* controls the appearance of individual tabs and elements inside a tab. */\n\n#TabsToolbar .tabbrowser-tab {\n  background-color: var(--lwt-accent-color) !important;\n}\n\n/* different tab background colors in various states */\n.tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background {\n  background: var(--uc-tab-hover) !important;\n}\n\n.tabbrowser-tab:is([visuallyselected], [selected]) .tab-background {\n  background: var(--uc-tab-selected) !important;\n}\n\n.tabbrowser-tab:focus:not([aria-activedescendant])>.tab-stack>.tab-background,\n.tabbrowser-tab.keyboard-focused-tab[selected]>.tab-stack>.tab-background {\n  background: var(--uc-tab-focused-hover) !important;\n}\n\n.tabbrowser-tab:not([selected], [multiselected], :hover, .keyboard-focused-tab, [open]) .tab-background {\n  background: var(--uc-tab-background) !important;\n}\n\n.tabbrowser-tab[multiselected]:not([selected], :hover, .keyboard-focused-tab, [open]) .tab-background {\n  background: var(--uc-tab-multi) !important;\n}\n\n.tabbrowser-tab[multiselected]:not([selected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background {\n  background: var(--uc-tab-multi-hover) !important;\n}\n\n/* block our animations while tabs are being dragged & dropped */\n#tabbrowser-tabs[movingtab] .tabbrowser-tab * {\n  transform: none !important;\n}\n\n.tab-background {\n  border: none !important;\n  outline: none !important;\n  opacity: 1 !important;\n}\n\n/* different tab shadows in various states. to produce the illusion of modulated depth */\n/* .tabbrowser-tab .tab-background {\n  box-shadow: 0px 0px 15px 0px hsla(0, 0%, 0%, 0.2), 0px 0px 5px 0px hsla(0, 0%, 0%, 0.1);\n} */\n\n.tabbrowser-tab:not([selected], [multiselected]):is(:hover, .keyboard-focused-tab, [open]) .tab-background,\n.tabbrowser-tab[multiselected] .tab-background {\n  box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.25) !important;\n}\n\n.tabbrowser-tab[selected] .tab-background,\n.tabbrowser-tab[multiselected][selected] .tab-background {\n  box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;\n}\n\n.tabbrowser-tab:focus:not([aria-activedescendant]) .tab-background {\n  box-shadow: 0px 0px 25px 3px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;\n}\n\n.tabbrowser-tab .tab-context-line {\n  display: flex !important;\n  order: 2 !important;\n  height: 1px !important;\n  margin: 0 !important;\n  opacity: 1 !important;\n  transition: none !important;\n}\n\n/* colored lines on container tabs */\n.tabbrowser-tab[usercontextid] .tab-context-line {\n  background-color: var(--identity-tab-color) !important;\n}\n\n/* purple line on multiselected tabs */\n.tabbrowser-tab[multiselected] .tab-context-line {\n  background-color: var(--multiselected-color) !important;\n}\n\n.tabbrowser-tab:not([usercontextid], [multiselected]) .tab-context-line {\n  display: none !important;\n}\n\n.tabbrowser-tab.identity-icon-on-multiselect[usercontextid][multiselected] .tab-content::after {\n  content: \"\";\n  display: flex;\n  height: 12px;\n  width: 12px;\n  margin-inline: 3px;\n  background: var(--identity-icon) center/contain no-repeat;\n  fill: var(--identity-icon-color);\n  -moz-context-properties: fill;\n}\n\n.tab-label-container {\n  height: revert !important;\n  pointer-events: none !important;\n}\n\n.tab-label {\n  font-weight: revert !important;\n}\n\n/* highlight unread tabs; requires unreadTabMods.uc.js */\n:root[italic-unread-tabs] .tabbrowser-tab[notselectedsinceload]:not([pending]),\n:root[italic-unread-tabs] .tabbrowser-tab[notselectedsinceload][pending][busy] {\n  font-style: italic !important;\n}\n\n.tabbrowser-tab[pinned] .tab-icon-stack {\n  margin: 0 !important;\n}\n\n.tab-content[pinned] {\n  padding: 0 var(--tab-inline-padding) !important;\n}\n\n/* a bunch of rules I might revisit in the future. minified since this is\nreally just a backup. these make it so that the tab highlight line on\ncontainer tabs only shows when the tab strip (or the tab itself) is being\nhovered. I used these rules for a long time but I realized although it might\nbe aesthetically less jarring, it makes it harder to find your container\ntabs, which could represent a security risk if you accidentally use the\nwrong container because you couldn't find the tab you were looking for. */\n/* .tabbrowser-tab[usercontextid] .tab-context-line{opacity:0!important;transition:none!important;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid] .tab-context-line,.tabbrowser-tab[usercontextid]:is(:hover,[selected],[multiselected],.keyboard-focused-tab,[open]) .tab-context-line{transform:none;opacity:1!important;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::before,.tabbrowser-tab[usercontextid]:is(:hover,.keyboard-focused-tab,[selected],[visuallyselected],[open]):not([multiselected]) .tab-stack::before{left:-4.6px;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::after,.tabbrowser-tab[usercontextid]:is(:hover,.keyboard-focused-tab,[selected],[visuallyselected],[open]):not([multiselected]) .tab-stack::after{right:-4.6px;}#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::after,#tabbrowser-tabs:is(:hover,:focus-within) .tabbrowser-tab[usercontextid]:not([multiselected]) .tab-stack::before,.tabbrowser-tab[usercontextid]:is([selected],:hover,.keyboard-focused-tab,[open]) .tab-stack::after,.tabbrowser-tab[usercontextid]:is([selected],:hover,.keyboard-focused-tab,[open]) .tab-stack::before{background-image:linear-gradient(0deg,var(--identity-tab-color) 0,var(--identity-tab-color) 1px,var(--tab-bg-current) 1px);} */\n\n/* the corners inherit these variables from the tab,\njust like they do with --identity-tab-color *\n.tabbrowser-tab:not([selected], [pinned]) {\n  --tab-bg-current: var(--lwt-accent-color);\n}\n\n.tabbrowser-tab[selected],\n.tabbrowser-tab[pinned]:not([selected]) {\n  --tab-bg-current: var(--toolbar-bgcolor);\n}\n\n.tabbrowser-tab:not([selected], [pinned], [multiselected]):is(:hover, .keyboard-focused-tab, [open]) {\n  --tab-bg-current: hsl(233, 55%, 8%);\n}\n\n.tabbrowser-tab[multiselected]:not([selected], [pinned]) {\n  --tab-bg-current: hsl(233, 53%, 8%);\n}\n\n.tabbrowser-tab[multiselected]:not([selected], [pinned]):is(:hover, .keyboard-focused-tab, [open]) {\n  --tab-bg-current: hsl(233, 51%, 10%);\n}\n\n/* style the loading burst that triggers when tab loading finishes */\n.tab-loading-burst {\n  pointer-events: none;\n}\n\n#TabsToolbar .tab-loading-burst::before {\n  backface-visibility: hidden;\n}\n\n:root[sessionrestored] .tab-loading-burst[pinned]::before {\n  margin-inline-start: calc((var(--pinned-tab-width, 36px) / 2) - 2.5%) !important;\n}\n\n/* pinned tabs should style just like regular tabs except without labels and buttons */\n#tabbrowser-tabs[positionpinnedtabs]>#tabbrowser-arrowscrollbox>.tabbrowser-tab[pinned]>.tab-stack {\n  border-inline: none !important;\n}\n\n#tabbrowser-tabs[positionpinnedtabs]>.tabbrowser-arrowscrollbox>.tabbrowser-tab[pinned]>.tab-stack {\n  border: none !important;\n}\n\n/* hide the sound icon while moving a pinned tab. does nothing without\nrestoreTabSoundButton.uc.js since sound icon no longer exists in vanilla firefox. */\n.tabbrowser-tab[pinned] .tab-icon-sound {\n  display: none !important;\n}\n\n/* we don't need the icon overlay since we restore the sound icon with javascript & manifest */\n.tab-icon-overlay {\n  display: none !important;\n}\n\n/* tab buttons are generally styled the same */\n.tab-close-button,\n.tab-icon-sound {\n  width: 16px !important;\n  height: 16px !important;\n  min-width: 16px !important;\n  min-height: 16px !important;\n  padding: 0 !important;\n  opacity: 0 !important;\n  fill: currentColor !important;\n  border-radius: var(--tab-button-border-radius, 2px) !important;\n}\n\n.tab-close-button {\n  order: 0;\n  display: block !important;\n  -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;\n  position: relative;\n  margin-inline: 0 -16px !important;\n  list-style-image: url(chrome://userchrome/content/textbox-clear.svg) !important;\n  fill-opacity: 0 !important;\n  stroke-opacity: 0.6 !important;\n}\n\n.tab-icon-sound {\n  display: -moz-inline-box !important;\n  list-style-image: none !important;\n  background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;\n  background-size: 12px !important;\n  background-position: center !important;\n  background-repeat: no-repeat !important;\n  list-style-image: none !important;\n  -moz-context-properties: fill, fill-opacity !important;\n  order: 2 !important;\n  fill-opacity: 0.6 !important;\n}\n\n.tab-icon-sound[muted] {\n  background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;\n  background-size: 12px !important;\n  background-position: center !important;\n  background-repeat: no-repeat !important;\n  list-style-image: none !important;\n}\n\n.tab-icon-sound[activemedia-blocked],\n.tab-icon-sound[activemedia-blocked]:hover {\n  padding: 0 !important;\n  background-image: url(chrome://userchrome/content/glyph-play-12.svg) !important;\n  background-size: 8px !important;\n  background-position: 4.5px center !important;\n  background-repeat: no-repeat !important;\n}\n\n.tab-close-button:hover {\n  background-color: var(--arrowpanel-dimmed) !important;\n  stroke-opacity: 1 !important;\n}\n\n.tab-icon-sound:hover {\n  background-color: var(--arrowpanel-dimmed) !important;\n  fill-opacity: 1 !important;\n}\n\n.tabbrowser-tab[pending] .tab-content .tab-icon-sound {\n  color: var(--uc-menu-semi-disabled-color) !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) :is(.tab-icon-sound, .tab-close-button) {\n  opacity: 1 !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) :is(.tab-icon-sound, .tab-close-button):hover:active {\n  background-color: var(--arrowpanel-dimmed-further) !important;\n}\n\n/* for the picture in picture button to mute/unmute tabs with proton, you need\nto follow the restore tab sound button instructions on my repo's readme */\n.tabbrowser-tab:not(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture] {\n  background-image: url(chrome://userchrome/content/tab-picture-in-picture.svg) !important;\n  background-size: 12px !important;\n  background-position: center !important;\n  background-repeat: no-repeat !important;\n  border-radius: revert !important;\n}\n\n.tab-icon-sound:is([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n  opacity: 1 !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying],\n.tabbrowser-tab .tab-icon-sound[pictureinpicture][muted],\n.tabbrowser-tab .tab-icon-sound[pictureinpicture]:hover {\n  background-size: 12px !important;\n  background-position: center !important;\n  background-repeat: no-repeat !important;\n  list-style-image: none !important;\n  border-radius: var(--tab-button-border-radius, 2px) !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying] {\n  background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][muted],\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [open]) .tab-icon-sound[pictureinpicture][soundplaying][muted] {\n  background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;\n}\n\n.tab-icon-sound {\n  transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out, 0.12s margin ease-in-out !important;\n}\n\n#tabbrowser-tabs .tab-content>.tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n  opacity: 0 !important;\n  pointer-events: none !important;\n  transform: translateX(16px) scale(0.5) !important;\n  margin-right: -16px !important;\n}\n\n/* uncomment the line below if you want to hide the sound button on the selected\ntab until the tab container is hovered. e.g. if your tab min size is small and\nyou want more room to see the tab title. by default the tab sound button shows\non every tab if sound is playing or muted. with the following line uncommented,\nthe tab sound button shows on every non-selected tab if sound is playing or\nmuted, but only shows on the selected tab if 1) the tab is muted, or 2) the tabs\narea is hovered. so in other words it won't show if audio is playing until you\nhover the general area of the tabs, but will show if audio is muted. */\n\n/* #tabbrowser-tabs:not(:hover, :focus-within, :focus) .tabbrowser-tab[visuallyselected] .tab-content > .tab-icon-sound:not([pictureinpicture], [muted]), */\n#tabbrowser-tabs:not(:hover, :focus-within, :focus) .tabbrowser-tab:not([open]) .tab-content>.tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {\n  opacity: 0 !important;\n  pointer-events: none !important;\n  transform: translateX(16px) scale(0.5) !important;\n  margin-right: -16px !important;\n}\n\n/* when tab is being dragged/dropped, style it like it's hovered */\n#tabbrowser-tabs[movingtab] .tabbrowser-tab[selected]:not([pinned]) .tab-icon-image {\n  opacity: 0 !important;\n}\n\n#tabbrowser-tabs[movingtab] .tabbrowser-tab[selected]:not([pinned]) .tab-close-button {\n  order: 0 !important;\n  display: flex !important;\n  position: relative !important;\n  margin-right: -16px !important;\n  visibility: visible !important;\n  opacity: 1 !important;\n}\n\n/* attention indicator */\n.tabbrowser-tab:is([image], [pinned])>.tab-stack>.tab-content[attention]:not([selected]),\n.tabbrowser-tab>.tab-stack>.tab-content[pinned][titlechanged]:not([selected]) {\n  background-image: url(chrome://userchrome/content/indicator-tab-attention-purple.svg) !important;\n  background-position: right 4px top 4px !important;\n  background-size: 10px !important;\n  background-repeat: no-repeat;\n}\n\n/* tab crashed indicator */\n.tabbrowser-tab[crashed]>.tab-stack>.tab-content::after {\n  top: 4px;\n  right: 4px;\n  content: \"\";\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  width: 10px;\n  height: 10px;\n  z-index: 2;\n  -moz-context-properties: fill, stroke;\n  stroke: var(--warning-icon-detail);\n  fill: var(--warning-icon-background);\n  background-image: url(chrome://userchrome/content/devtools/error-small-two-tone.svg);\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n/* tab buttons are animated with opacity and transformation */\n.tabbrowser-tab:not(:hover, .keyboard-focused-tab, [tabdrop-samewindow], [open]) .tab-close-button {\n  transform: translateX(-15px) scale(0.5) !important;\n}\n\n#tabbrowser-tabs:not([movingtab]) .tabbrowser-tab:not([tabdrop-samewindow]) :is(.tab-close-button, .tab-icon-image, .tab-sharing-icon-overlay, .tab-throbber) {\n  transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out !important;\n}\n\n.tab-icon-pending[pendingicon] {\n  pointer-events: none !important;\n  display: block !important;\n  margin-right: -16px !important;\n}\n\n.tab-icon-image {\n  display: block !important;\n  position: relative !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [busy], [open]) :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n  opacity: 0 !important;\n  pointer-events: none !important;\n  transform: translateX(25px) scale(0.5) !important;\n}\n\n.tabbrowser-tab .tab-label:not([fadein]),\n.tabbrowser-tab .tab-throbber:not([fadein]) {\n  display: none !important;\n}\n\n.tabbrowser-tab .tab-throbber:not([busy]) {\n  opacity: 0 !important;\n  pointer-events: none !important;\n  transform: translateX(-15px) scale(0.5) !important;\n}\n\n.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [tabdrop-samewindow], [open]) .tab-throbber {\n  opacity: 0 !important;\n  pointer-events: none !important;\n  transform: translateX(25px) scale(0.5) !important;\n}\n\n.tab-throbber[busy] {\n  fill: var(--busy-throbber-fill) !important;\n}\n\n.tab-throbber[progress] {\n  fill: var(--loading-throbber-fill) !important;\n}\n\n.tab-throbber[busy]::before {\n  opacity: 0.8 !important;\n}\n\n.tab-throbber[progress]::before {\n  opacity: 1 !important;\n}\n\n:root[sessionrestored] .tab-throbber[fadein] {\n  display: block !important;\n  position: relative !important;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root[sessionrestored] .tab-throbber[fadein] {\n    background-image: url(\"chrome://browser/skin/tabbrowser/hourglass.svg\");\n    background-position: center;\n    background-repeat: no-repeat;\n    -moz-context-properties: fill, fill-opacity !important;\n  }\n\n  .tab-throbber[busy] {\n    opacity: 0.8 !important;\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n\n  /* tabLoadingSpinner.uc.js enables a special loading throbber animation\nthat spins instead of bouncing horizontally */\n  @keyframes uc-tab-throbber-spinner-css {\n    to {\n      rotate: 360deg;\n    }\n  }\n\n  @keyframes uc-tab-throbber-spinner-sprite {\n    0% {\n      transform: translateX(0);\n    }\n\n    100% {\n      transform: translateX(-100%);\n    }\n  }\n\n  @keyframes uc-tab-throbber-spinner-sprite-rtl {\n    0% {\n      transform: translateX(0);\n    }\n\n    100% {\n      transform: translateX(100%);\n    }\n  }\n\n  /* I made different versions of this animation to circumvent an SVG issue. if\nyou update Firefox and the throbber animation stops working, uncomment one of\nthe 2 alternate rules below. one of the 3 should work. you can do the same\nthing with the all-tabs-menu loading icons in the next ruleset below. */\n  :root[sessionrestored] .tab-throbber[throbber-loaded]::before {\n    content: \"\" !important;\n    display: flex !important;\n    -moz-context-properties: fill, fill-opacity !important;\n    width: 16px !important;\n    height: 16px !important;\n    animation: none !important;\n    background-position: center !important;\n    background-repeat: no-repeat !important;\n    fill: inherit !important;\n\n    /* ANIMATION METHOD #1: this version of the animation is implemented by an\n     <animateTransform> tag. it's the most efficient method but it has broken\n     once for a couple days due to an erroneous nightly patch. */\n\n    /* background-image: url(chrome://userchrome/content/loading-spinner.svg) !important; */\n\n    /* ---------------------------------- */\n\n    /* ANIMATION METHOD #2: the animation is written in a <style> tag\n     embedded inside the SVG code. it's visually identical to method #1, but\n     in terms of performance it is slightly less efficient. the animation is\n     applied to the compound vector path via the inline style attribute,\n     giving the element a CSS property \"animation\" that references the\n     animation in the style tag. use this if method #1 randomly breaks,\n     *temporarily*. mozilla should patch such a bug quickly. */\n\n    /* background-image: url(chrome://userchrome/content/loading-spinner-css.svg) !important; */\n\n    /* ---------------------------------- */\n\n    /* ANIMATION METHOD #3: use this if neither method #1 nor #2 works; or if\n     you want to adjust the speed or other properties of the animation. in\n     this version, the SVG image itself is not animated at all. it's\n     completely static. instead, the entire animation is added post hoc via\n     CSS in this user stylesheet. therefore, it should never break. I believe\n     this method is significantly less efficient than the two aforementioned\n     methods, because you don't get to use optimizations that stop SVG\n     animations playing when they're not active. my understanding is the\n     animation is basically running 24/7 even when the spinner isn't visible,\n     because the spinner technically is always visible in order to support the\n     sliding tab-hover transitions. you can't see it but it's not hidden in\n     the DOM sense. so I think that makes this method a last resort. */\n\n    /* background-image: url(chrome://userchrome/content/loading-spinner-static.svg) !important;\n  animation: 0.85s steps(12, end) uc-tab-throbber-spinner-css infinite !important; */\n\n    /* ANIMATION METHOD #4: this version of the animation is implemented in CSS on\n     a sprite sheet. it's like method #3 except it eliminates an issue with the\n     vector illustration that makes the icon look like it wobbles. */\n    background-image: url(chrome://userchrome/content/loading-spinner-sprite.svg) !important;\n    background-position: left center !important;\n    width: 192px !important;\n    height: 100% !important;\n    animation: uc-tab-throbber-spinner-sprite 0.85s steps(12) infinite !important;\n  }\n\n  /* ANIMATION METHOD #4: */\n  :root[sessionrestored] .tab-throbber[throbber-loaded]:-moz-locale-dir(rtl)::before {\n    animation-name: uc-tab-throbber-spinner-sprite-rtl !important;\n  }\n\n  /* all tabs menu & vertical tabs pane (script) */\n  :root[uc-loading-spinner] .tab-throbber-tabslist:is([busy], [progress]) {\n    /* ANIMATION METHOD #1: */\n    list-style-image: url(chrome://userchrome/content/loading-spinner.svg) !important;\n\n    /* ANIMATION METHOD #2: */\n    /* list-style-image: url(chrome://userchrome/content/loading-spinner-css.svg) !important; */\n\n    /* ANIMATION METHOD #3: */\n    /* animation: 0.85s steps(12, end) uc-tab-throbber-spinner-css infinite !important;\n  list-style-image: url(chrome://userchrome/content/loading-spinner-static.svg) !important; */\n  }\n\n  :root[uc-loading-spinner] .tab-throbber-tabslist[busy] {\n    opacity: 0.8 !important;\n    fill: var(--busy-throbber-fill) !important;\n  }\n\n  :root[uc-loading-spinner] .tab-throbber-tabslist[progress] {\n    opacity: 1 !important;\n    fill: var(--loading-throbber-fill) !important;\n  }\n}\n\n/* hide the close button for pinned tabs. if the last visible tab is pinned, it\ndoesn't hide the close button since the tab doesn't get shrunk in that case.\nthis requires you to make a pref in about:config and set it to true:\n\"userChrome.tabs.pinned-tabs.close-buttons.disabled\" */\n@media (-moz-bool-pref: \"userChrome.tabs.pinned-tabs.close-buttons.disabled\") {\n  .tabbrowser-tab[pinned] .tab-close-button {\n    display: none !important;\n  }\n\n  .tabbrowser-tab[pinned] .tab-throbber[busy],\n  .tabbrowser-tab[pinned]:not([busy]) :is(.tab-icon-image, .tab-sharing-icon-overlay) {\n    opacity: 1 !important;\n    transform: none !important;\n  }\n}\n\n/* for some reason the gradient on overflowing labels is variable in proton. it\ngets bigger when you hover the tab, apparently because the close button gains a\nbackground in that condition. this is ugly in general imo but it's useless with\nthis theme in particular since we put the close button on the right, meaning it\ndoesn't overlap with the right side of the label at all, which is where the\noverflowing mask is applied. so we make the mask size constant. */\n.tabbrowser-tab {\n  --tab-label-mask-size: 2em !important;\n}"
        }
    ]
}